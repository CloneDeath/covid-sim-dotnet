name: build and test

on:
  push:
  pull_request:
    branches: [ master ]
    paths:
      - '**.cs'
      - '**.csproj'

env:
  DOTNET_VERSION: '8.0.116' # The .NET SDK version to use, see `dotnet --version`

jobs:
  build-and-test:

    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore ./CovidSim.sln

      - name: Build
        run: dotnet build --configuration Release --no-restore ./CovidSim.sln

      - name: Test with coverage
        run: >
          dotnet test ./CovidSim.sln \
          --no-restore \
          --configuration Release \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults

      - name: Install ReportGenerator tool
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate coverage report
        run: >
          reportgenerator \
          -reports:TestResults/**/coverage.cobertura.xml \
          -targetdir:CoverageReport \
          -reporttypes:HtmlSummary
        env:
          PATH: ${{ env.PATH }}:/home/runner/.dotnet/tools

      - name: Verify coverage threshold
        run: >
          bash -c 'coverage=$(grep --only-matching --no-filename --perl-regexp "line-rate=\"\K[0-9.]+" TestResults/**/coverage.cobertura.xml | head -1); \
          threshold=0.99; \
          echo "Coverage: $coverage"; \
          awk "BEGIN {exit !($coverage >= $threshold)}"'
